apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: send-slack-notification
spec:
  description: >-
    These tasks post a Downstream CI run status message to a Slack channel.
    This task uses Incoming Webhooks of Slack to send the message.
  params:
    - name: MESSAGE
      description: |
        Markdown template for message that will be sent in the case of staging e2e failure.
        You can use any formatting that Slack supports. Additionally it's possible to use
        following placeholders
        * <icon> pipeline run status icon, different for successful and failed pipeline run
        * <logs_url> URL pointing to pipeline run logs in OpenShift web console
    - name: SECRET_NAME
      type: string
      description: The secret name where you have stored the webhook URL, it expects the key of the secret to be `slack_webhook_url`
      default: rhtap-webhook
  steps:
    - name: post-slack-message
      image: quay.io/openshift-pipeline/ci
      script: |
        #!/usr/bin/env sh
        set -u -o pipefail

        echo "Getting pipeline run name, status and logs URL"
        pipelineRunName=$(oc get taskrun $(context.taskRun.name) -o json | jq '.metadata.labels."tekton.dev/pipelineRun"' -r)
        status=$(oc get pipelinerun.v1beta1.tekton.dev ${pipelineRunName} -o jsonpath={.status.conditions[].message})
        consoleUrl=$(oc whoami --show-console)
        logsUrl="${consoleUrl}/k8s/ns/$(context.taskRun.namespace)/tekton.dev~v1beta1~PipelineRun/${pipelineRunName}/logs"

        echo "Setting icon and run status in message"
        MSG="$(params.MESSAGE)"
        if [[ "${status}" == *"Failed: 0"* ]]; then
          MSG="${MSG//<icon>/:rainbow_2:}"
          MSG="${MSG//<run_status>/succeeded}"
        else
          MSG="${MSG//<icon>/:volcano:}"
          MSG="${MSG//<run_status>/failed}"
        fi

        tag_ic="@ic-appstudio-qe"

        echo "Setting logs URL, pipeline run name and tagging IC in message"
        MSG="${MSG//<logs_url>/$logsUrl}"
        MSG="${MSG//<pr_name>/$pipelineRunName}"
        MSG="${MSG//<tag_ic>/$tag_ic}"

        echo "Sending message to Slack"
        curl --no-progress-meter -X POST -H 'Content-Type: application/json' --data "{\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"${MSG}\"}}]}" "${URL}"
      env:
        - name: URL
          valueFrom:
            secretKeyRef:
              name: $(params.SECRET_NAME)
              key: slack_webhook_url
