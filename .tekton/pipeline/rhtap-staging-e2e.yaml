apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: rhtap-staging-e2e
spec:
  params:
    - name: repo_url
    - name: revision
    - name: pull_request_number
    - name: source_branch
    - name: sender
  workspaces:
    - name: git
    - name: shared-workspace
    - name: shared-file
  tasks:
    - name: staging-argocd-login
      taskRef:
        name: login-argocd
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: clone-infra-deployment-git
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo_url)
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.revision)
        - name: depth
          value: "3"
      workspaces:
      - name: output
        workspace: git
        subPath: infra-deployment-git
      timeout: 10m
    - name: get-pr-modified-files
      taskRef:
        name: get-pr-modified-files
      params:
        - name: revision
          value: $(params.revision)
      runAfter:
        - clone-infra-deployment-git
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
        - name: shared-file-path
          workspace: shared-file
    - name: changed-component-app-name
      taskRef:
        name: component-app-name
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
        - name: shared-file-path
          workspace: shared-file
      runAfter:
        - get-pr-modified-files
    - name: rebase-pr
      taskRef:
        name: rebase-pr
      params:
        - name: pull_request_number
          value: $(params.pull_request_number)
        - name: source_branch
          value: $(params.source_branch)
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
      runAfter:
        - get-pr-modified-files
    - name: replace-revision
      taskRef:
        name: replace-revision
      params:
        - name: source_branch
          value: $(params.source_branch)
        - name: sender
          value: $(params.sender)
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
        - name: shared-file-path
          workspace: shared-file
      runAfter:
        - changed-component-app-name
        - rebase-pr
    - name: staging-argocd-app-sync
      taskRef:
        name: app-sync
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
        - name: shared-file-path
          workspace: shared-file
      runAfter:
        - replace-revision
        - staging-argocd-login
    - name: clone-stage-e2e-git
      taskRef:
        name: git-clone
      params:
        - name: url
          value: 'https://github.com/sawood14012/e2e-tests.git'
        - name: deleteExisting
          value: "true"
        - name: revision
          value: "verify-stage"
      workspaces:
      - name: output
        workspace: git
        subPath: stage-e2e-git
      timeout: 10m
    - name: stage-verify-e2e-test
      taskRef:
        name: stage-verify-e2e-test
      params:
      - name: TASK_RETRIES
        value: "$(context.pipelineTask.retries)"
      workspaces:
      - name: stage-e2e-git
        workspace: git
        subPath: stage-e2e-git
      runAfter:
        - staging-argocd-app-sync
        - clone-stage-e2e-git
  finally:
    - name: rebase-pr-2
      taskRef:
        name: rebase-pr
      params:
        - name: pull_request_number
          value: $(params.pull_request_number)
        - name: source_branch
          value: $(params.source_branch)
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
    - name: revert-replace-revision
      taskRef:
        name: revert-replace-revision
      params:
        - name: source_branch
          value: $(params.source_branch)
      workspaces:
        - name: argocd-config
          workspace: shared-workspace
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
      when:
        - input: $(tasks.rebase-pr-2.status)
          operator: in
          values: ["Succeeded"]
    - name: staging-argocd-app-sync-2
      taskRef:
        name: app-sync
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
        - name: shared-file-path
          workspace: shared-file
      when:
        - input: $(tasks.revert-replace-revision.status)
          operator: in
          values: ["Succeeded"]
    - name: rebase-pr-3
      taskRef:
        name: rebase-pr
      params:
        - name: pull_request_number
          value: $(params.pull_request_number)
        - name: source_branch
          value: $(params.source_branch)
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
      when:
        - input: $(tasks.staging-argocd-app-sync-2.status)
          operator: in
          values: ["Succeeded"]
    - name: merge-pr
      taskRef:
        name: merge-pr
      params:
        - name: pull_request_number
          value: $(params.pull_request_number)
        - name: source_branch
          value: $(params.source_branch)
      workspaces:
        - name: infra-deployment-git
          workspace: git
          subPath: infra-deployment-git
      when:
        - input: $(tasks.rebase-pr-3.status)
          operator: in
          values: ["Succeeded"]
    - name: send-slack-notification
      taskRef:
        name: send-slack-notification
      params:
        - name: pr_id
          value: $(tasks.get-pr-number.results.pr_id)
        - name: MESSAGE
          value: |
            <icon> Staging e2e pipeline run <pr_name> *<run_status>* for pull request <<pr_url>|pr> <icon> <<logs_url>|View logs> <tag_ic>
      when:
        - input: $(params.SEND_SLACK_NOTIFICATION)
          operator: in
          values: ["true"]
